---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import InterviewFooter from '../../components/interview/InterviewFooter.svelte';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection, getEntry } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('interview')).sort(
	(a, b) => (b?.data?.pubDate?.valueOf() ?? 100) - (a?.data?.pubDate?.valueOf() ?? 100)
);
---

<!doctype html>
<html lang="en" data-is-scrolling-up="true|false"
  data-is-bottom="true|false"
  data-is-top="true|false"
  data-has-scroll="true|false">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />

		<style>
			main {
				/* width: 960px; */
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0 auto;
				padding: 0;
			}
			ul li {
				margin: 0 auto;
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			/* ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			} */
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.target {
				margin: 0.5em 0 0 0;
				color: rgb(var(--gray));
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
				font-size: 1rem;
			}
			ul li a:hover h4,
			ul li a:hover .date,
			ul li a:hover .target {
				color: var(--color-header);
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul>
					{
						posts.map(async (post) => {
							const target = post?.data?.target ? await getEntry(post?.data?.target) : undefined;

							return (
							<li>
								<a href={post.data.title == 'COMMING-SOON' ? `` : `/interview/${post.slug}/`}>
									<img width={720} height={360} src={post.data.thumbnailImage} alt="" />
									<h4 class="title">{post?.data?.title}</h4>

									{target && <p class="target">by. {target?.data?.name}</p>}
									

									{post?.data?.pubDate && <p class="date">
										<FormattedDate date={post?.data?.pubDate} />
									</p>}
									
								</a>
							</li>
						)})
					}
				</ul>
			</section>
		</main>
		<InterviewFooter />
	</body>
</html>
