---
import { getEntry, type CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import InterviewFooter from '../components/interview/InterviewFooter.svelte';

import '../styles/interview.scss';
import InterviewArticleFooter from '../components/interview/InterviewArticleFooter.svelte';

type Props = CollectionEntry<'interview'>['data'];

const { subject, title, description, pubDate, updatedDate, thumbnailImage, titleImage, target:t, tags } = Astro.props;
const { data:target } = t ? await getEntry(t) : {data:undefined};
---

<html lang="en">
	<head>
		<BaseHead title={`${subject} - ${title}`} description={subject} image={new URL(thumbnailImage || '', Astro.url)} />

        <style is:global>
            article.interview section h2, 
            article.interview section h4, 
            article.interview section p,
            article.interview section figure,
            article.interview section ul {
                transition: 1200ms;
                opacity: 0;
            }

             article.interview section h2.fade-in, 
            article.interview section h4.fade-in,
            article.interview section p.fade-in,
            article.interview section figure.fade-in,
             article.interview section ul.fade-in {
                opacity: 1;
            }
        </style>
        <script>
            const observer = new IntersectionObserver(
            (entries, observer) => {
                entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add("fade-in");
                } else {
                    // 스크롤 시 계속 보이게끔 하려면
                    // entry.target.classList.remove("fade-in");
                }
                });
            },
                { threshold: 0 }
            );

            const targetElements = document.querySelectorAll("*");
                targetElements.forEach((element) => {
                observer.observe(element);
            });
        </script>
	</head>

	<body>
		<Header />
		<main>
			<article class="interview">
				<div class="prose">
                    <div class="gradient-background">
                        <section class="title">
                                <div class="post_title">
                                    <h4>
                                        <span>{subject}</span> <b>{title}</b>
                                    </h4>
                                    <h5>여성서사 아카이브 프로젝트 Warchive</h5>
                                </div>

                                <div class="border"></div>

                                <div class="article_title">
                                    {titleImage && <img src={titleImage} alt="" />}
                                    <div>
                                        {description?.split(`\n`)?.map((des) => <p>{des}</p>)}
                                    </div>
                                </div>
                        </section>
                    </div>

                    <section class="content">
                        <slot />
                    </section>

                    <InterviewArticleFooter
                        client:load
                        target={target}
                        url={Astro.url}
                        description={subject + " " + title}
                        image={new URL(thumbnailImage || '', Astro.url)}
                        hashtags={tags}
                    />
				</div>
			</article>
		</main>
		<InterviewFooter />
</html>
